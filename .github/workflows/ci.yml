name: Continuous integration

on:
  push:
    branches-ignore: 'release-**'
    tags-ignore: '**'

env:
  CACHE_VERSION: ${{ secrets.CACHE_VERSION || '' }}

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      NODE_VERSION: ${{steps.engines.outputs.NODE_VERSION}}
      CACHE_KEY: ${{steps.cache.outputs.CACHE_KEY}}
    steps:
      - uses: actions/checkout@v2
      - name: Set Node version
        id: engines
        run: |
          echo "::set-output name=NODE_VERSION::$(jq -r '.engines.node' package.json)"
      - name: Set Cache key
        id: cache
        run: |
          echo "::set-output name=CACHE_KEY::${{ runner.os }}-${{ steps.engines.outputs.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}-${{ env.CACHE_VERSION }}"

  tests:
    if: "!contains(github.event.head_commit.message, 'chore: release')"
    runs-on: ubuntu-latest
    needs:
      - init

    strategy:
      matrix:
        script: ['lint', 'prettier:check', 'test']

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '${{ needs.init.outputs.NODE_VERSION }}'

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/cache
            ~/.cache
            !~/cache/exclude
            !~/.cache/exclude
            ~/.npm
          key: '${{ needs.init.outputs.CACHE_KEY }}'

      - name: Install Packages
        run: |
          npm ci
      - name: Run unit ${{ matrix.script }}
        run: npm run ${{ matrix.script }}

  deploy-staging:
    if: github.ref == 'refs/heads/master' || contains(github.event.head_commit.message, 'force-deploy-staging')
    needs:
      - init
      - tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '${{ needs.init.outputs.NODE_VERSION }}'

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/cache
            ~/.cache
            !~/cache/exclude
            !~/.cache/exclude
            ~/.npm
          key: '${{ needs.init.outputs.CACHE_KEY }}'

      - name: Install Packages
        run: npm ci
      - name: Build
        run: npm run build
      - name: deploy
        run: echo "DEPLOY"
